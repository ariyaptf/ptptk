# Generated by Django 5.0.3 on 2024-03-11 05:19

import coderedcms.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='PanDhamTargetGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Group Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('priority', models.IntegerField(default=0, verbose_name='Priority')),
            ],
            options={
                'verbose_name': 'Target Group',
                'verbose_name_plural': 'Target Groups',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BookInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name', models.CharField(max_length=255, verbose_name='Book Name')),
                ('short_description', models.CharField(blank=True, max_length=500, verbose_name='Short Description')),
                ('description', coderedcms.fields.CoderedStreamField(blank=True, use_json_field=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Price')),
                ('initial_stock', models.IntegerField(default=0, verbose_name='Initial Stock')),
                ('minimum_stock_level', models.IntegerField(default=0, verbose_name='Minimum Stock Level')),
                ('current_stock', models.IntegerField(default=0, verbose_name='Current Stock')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
                ('cover_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book_cover', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Book Inventory',
                'verbose_name_plural': 'Book Inventory',
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('in', 'Transfer In'), ('pandham', 'Add to Pandham Stock'), ('support', 'Support Publication'), ('request', 'Book Request'), ('adjustment', 'Stock Adjustment')], max_length=255, verbose_name='Transaction Type')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('transaction_date', models.DateTimeField(auto_now_add=True, verbose_name='Transaction Date')),
                ('details', models.TextField(blank=True, help_text='Provide any specific details about this transaction.', verbose_name='Transaction Details')),
                ('book_inventroy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='pandham.bookinventory', verbose_name='Book Store')),
            ],
            options={
                'verbose_name': 'Book Transaction',
                'verbose_name_plural': 'Book Transactions',
            },
        ),
        migrations.CreateModel(
            name='PandhamStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_stock', models.IntegerField(default=0, verbose_name='Initial Stock')),
                ('current_stock', models.IntegerField(default=0, verbose_name='Current Stock')),
                ('book_inventroy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='pandham.bookinventory', verbose_name='Book')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Store',
            },
        ),
        migrations.CreateModel(
            name='PanDhamTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('requested_books', models.PositiveIntegerField(verbose_name='Requested Books')),
                ('request_date', models.DateTimeField(verbose_name='Request Date')),
                ('additional_info', models.TextField(blank=True, verbose_name='Additional Information')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='pandham.pandhamtargetgroup', verbose_name='Target Group')),
            ],
            options={
                'verbose_name': 'Target',
                'verbose_name_plural': 'Targets',
            },
        ),
        migrations.CreateModel(
            name='Propagation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('contribute', 'Contribute to the Dhamma publishing fund and receive book or donate them as Pandham.'), ('request', 'Request Pandham books for self study.'), ('adjustment', 'Stock Adjustment')], default='contribute', max_length=20, verbose_name='Choose an Action')),
                ('name', models.CharField(default='Anonymous', help_text='Please specify name, pseudonym, or dedication.', max_length=255, verbose_name='Name')),
                ('phone_number', models.CharField(help_text='Contactable mobile phone number ie.0988888888 (not publicly disclosed).', max_length=20, verbose_name='Phone Number')),
                ('amount_contributed', models.DecimalField(decimal_places=2, default=0, help_text='Contribute to the Dhamma publishing fund.', max_digits=10, verbose_name='Contribute funds')),
                ('number_of_books', models.PositiveIntegerField(default=0, help_text='Calculated as the number of books.', verbose_name='Quantity')),
                ('donate_book', models.PositiveIntegerField(default=0, verbose_name='Number of books for donation')),
                ('request_books', models.PositiveIntegerField(default=0, help_text='Enter the number of books requested.', verbose_name='Requested Books')),
                ('shipping_address', models.TextField(blank=True, help_text='Enter the shipping address and receiver contact number.', null=True, verbose_name='Shipping Address')),
                ('otp', models.CharField(help_text='Enter the OTP number.', max_length=6, verbose_name='OTP')),
                ('date_contribute', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('note', models.TextField(blank=True, help_text='Note or memo for this transaction.', null=True, verbose_name='Memo or Note')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('book_inventroy', models.ForeignKey(help_text='Select the Pandham book.', on_delete=django.db.models.deletion.CASCADE, related_name='Propagation', to='pandham.bookinventory', verbose_name='PanDham Book')),
                ('target_groups', models.ManyToManyField(blank=True, help_text='Select the target groups for this support publication.', to='pandham.pandhamtargetgroup', verbose_name='Target Groups')),
            ],
            options={
                'verbose_name': 'Support Publication',
                'verbose_name_plural': 'Support Publications',
            },
        ),
    ]
